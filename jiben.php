<?php
/*
-----------------------------------------------------------
一个网页基本可以做任何事情，但是第一次尝试应该让事情简单点：

你的网页内容是什么？

你的网页长什么样子？背景颜色，什么字体。。。。。。

你的主题中要展示什么信息？编写一个标题和几个段落，再想几张你想展示出来的图片。

复杂的项目需要详细的参考手册，内容包括颜色，字体，网页各项目的间距。适合的编写规范等。可以在Firefox OS Guidelines查看一个参考手册。

在你为文件夹和文件命名最好养成使用小写并且省略空格的习惯。那样你将减少很多问题。

网页最常有这样的结构：
1.  index.html主页内容，就是人们第一次进入你额网页看到的；
2.  images文件夹，这里存放你网页上所有的图像；
3.  scripts文件夹，这里存放为你网页添加交互功能的JavaScript代码(比如点击时读取数据的按钮)。

文件路径的通用规则：
要引用位于同级目录文件，只需直接使用文件名，如 my-image.jpg;
要引用子目录的文件，在路径前加上斜杠，如 subdirectory/my-image.jpg;
要引用父目录的文件，加上两个点，如 ../my-image.png;
还可以随意组合以上方法，如 ../subdirectory/another-subdirectory/my-image.png.
记得在代码中使用斜杠"/"。

<p class="editor-note">My cat is very grumpy</p>
class是属性，是关于元素(如 P)的额外信息。空格 属性=""。

<p>My cat is <strong>very</strong> grumpy.</p>元素的嵌套。

<img src="../favicon.ico" alt="My test image">空元素。空元素不包含内容是有效果的。也没有闭合标签。

<html></html>整个页面内容，叫根元素。

<head></head>包含你想添加的所有内容，但是不会被用户看到。包括想被搜索引擎搜索到的关键字(keywords)和页面描述，CSS样式表和字符编码声明等等。

<body></body>包含了你想被用户看到的内容，文本，图像，视频，游戏，音频或者其它内容。

<meta charset="utf-8">这个元素指定了你的文档使用的字符编码，像UTF-8，它包括了非常多的人类一直的语言的字符。永远位于head元素内部。

<title></title>这个元素设置了页面的标题，显示在浏览器标签页上，而且你将网页添加进收藏夹时候，作为默认名称。

<img src="../favicon.ico" alt="My test image">通过src(source)这个元素也要包括alt属性，它是图像的描述内容(即这是个什么图片)：盲人使用屏幕阅读器来读出alt，而且有些代码里面的错误让图像不能被展示出来。比如，src属性设置错误，会在图像位置显示alt的内容。

标题元素：(h1---h6)
<h1>My main title</h1>
<h2>My top level heading</h2>
<h3>My subheading</h3>
<h4>My sub-subheading</h4>

段落元素：<p>某某某</p>

列表：很多web内容都是列表。其至少两个类型，就是有序列表(ol)和无序列表(ul)。列表内的每个项目被包括在<li>元素里。

链接：需要使用一个简单link——<a>。
将一些文本添加到链接：
<a href="https://www.mozilla.org/en-US/about/manifesto/">Mozilla Manifesto</a>
如果网址开始部分省略了http://或者https://协议，会得到错误。
href——hypertext reference.





---------------------------------------------------------------
CSS是你用来为网页添加样式的代码。
如：p{
	color: red;
}
在这里P是选择符，选择了一个或多个需要添加样式的元素。
color: red，就是声明，制定了你想要添加样式元素的属性。
color,是属性，是P元素的属性，通过选择合适属性来改变你的规则。
red,属性值，冒号之后。用分号分开多个属性。

有多种不同的选择符：元素选择符(标签选择符，如‘P’)；
ID选择符：指定ID的元素，一个HTML只能一个指定一个相同的ID；
class选择符：指定class的元素，一个HTML可以有多个class;
属性选择符：拥有属性的元素，img src;
伪类选择符：指定的元素，在特殊的状态，如悬停。a:hover

CSS文件中在任何"/*和 *之间的内容都是注释，浏览器加载时会忽略，是为了让你写下关于你做的有帮助的笔记所用。

大部分的HTML都可以看作一个一个层叠的盒子。CSS布局就是基于盒模型的。每个占据你页面空间的块级元素都有相似的属性：

内边距(padding),就是围绕着内容的空间多大(比如围绕段落的空间)；

边框(border),就是内边距的实体线段；

外边距(margin),就是围绕元素外部的空间是多大；

内外边距的值：设一个值，适用于所有四个边；设两个值，第一个指上下，第二个指左右；设三个值，第一个指上，第二个指左右，第上个指底部；设四个值，指上，右，底部，左。

width,属于一个元素的；

background-color,元素内容和内边距之后的颜色；

color,元素内容的颜色，通常是文本；

text-shadow,为元素内的文本设置阴影。第一个设置水平方向阴影，第二个设置垂直方向阴影，第三个设置了阴影模糊的距离(越大越模糊)，第四个设置了阴影的颜色。

display,设置元素的显示模式





---------------------------------------------------------------
JavaScript是一门为你的网站添加交互功能的编程语言。
它难以置信的强大。可以从简单的做起，比如轮播，相册，浮动布局，按钮点击事件，随着学习的深入，可以创建游戏，2D动画，3D图像，数据库驱动的综合应用程序，以及更多！

它的动能：
1.应用编程接口(APIs),内置于浏览器中提供动态编写HTML和CSS，抓取操控用户摄像头的数据流和操作3D图像和音频样品。
2.第三方APIs允许开发者将其它公司网站如Twitter或Facebook与自己的网站合并功能。
3.第三方框架和库，你可以使用你的HTML来快速编写网站和应用。

你对JavaScript掌握的越多，你的网页将进入一个更有创造力和更加强大的层次。

应该将<script></script>放在HTML文件的底部，是因为浏览器解析HTML是按照代码出现顺序来执行的。如果JavaScript放在头头，那么如果它有问题，不能正常加载，则会导致整个HTML不能正常加载。所以最优放在底部。

变量(Variables):是存储数据的容器。要声明一个变量需要使用关键字var,然后输入任何你想要的名字，如var myVariable。有一些命名规则，如对大小写敏感，不能有空格和标点符号，不得有关键字，第一个字符不能是数字等。

var myVariable='Bob';这是给变量赋值。
myVariable='Steve';这是改变变量的值。

JavaScript的注释格式：'/**/'



































*/




























?>